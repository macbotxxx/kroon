# Generated by Django 3.2.9 on 2022-10-04 07:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Create_Virtual_Cards',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of an object.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the record was created.', max_length=20, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Modified date when the record was created.', max_length=20, verbose_name='Modified Date')),
                ('currency', models.CharField(blank=True, help_text=' This is the currency the card would be denominated in. Expected values include NGN and USD. ', max_length=10, null=True, verbose_name='Currency')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, help_text=' This is the amount to prefund the card with on card creation. ', max_digits=300, null=True, verbose_name='Amount Local Currency')),
                ('first_name', models.CharField(blank=True, help_text=' This is the first name of the cardholder. ', max_length=70, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, help_text=' This is the last name of the cardholder. ', max_length=70, null=True, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(blank=True, default='%Y/%m/%d', help_text=' This is the date of birth of the cardholder. Expected date format is YYYY/MM/DD. ', null=True, verbose_name='Date of Birth')),
                ('email', models.EmailField(blank=True, help_text=" This is the cardholder's email address. ", max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, help_text=' This is the phone number of the cardholder. ', max_length=70, null=True, verbose_name='Phone Number')),
                ('title', models.CharField(blank=True, choices=[('Mr', 'Mr'), ('Mrs', 'Mrs')], help_text=' This is title of the cardholder. Expected values are Mr, Mrs and Miss ', max_length=70, null=True, verbose_name='Phone Number')),
                ('gender', models.CharField(blank=True, choices=[('M', 'M'), ('F', 'F')], help_text=" This is the cardholder's gender. Expected values are M and F. ", max_length=70, null=True, verbose_name='Phone Number')),
                ('debit_currency', models.CharField(blank=True, default='USD', help_text=' Please use this if you want to debit a different balance on Flutterwave to fund your card e.g. you are funding a USD card but you want to debit your NGN balance to fund the card. ', max_length=10, null=True, verbose_name='Debit Currency')),
                ('billing_name', models.CharField(blank=True, help_text=' This is the name that will appear on the card. If this is not provided, the first_name and last_name passed in the request would appear on the card. ', max_length=70, null=True, verbose_name='Billing Name')),
                ('billing_address', models.CharField(blank=True, help_text=' This is the registered address for the card. e.g. Your house address where you would receive your card statements. ', max_length=250, null=True, verbose_name='Billing Address')),
                ('billing_city', models.CharField(blank=True, help_text=' This is the city registered with the card, it makes up part of the address the customer used for their card. ', max_length=250, null=True, verbose_name='Billing City')),
                ('billing_state', models.CharField(blank=True, help_text=' This is the State/County/Province/Region registered with the card. It is a two letter word representing the state in the billing country e.g CA, NY  ', max_length=7, null=True, verbose_name='Billing State')),
                ('billing_country', models.CharField(blank=True, help_text=' This is the country registered with the card.  ', max_length=7, null=True, verbose_name='Billing Country ISO2')),
                ('billing_postal_code', models.CharField(blank=True, help_text=' This is the zip code or postal card registered with the card.  ', max_length=7, null=True, verbose_name='Billing Postal Code')),
                ('card_created', models.BooleanField(blank=True, default=False, help_text=' This indicates if the card was created or not. ', null=True, verbose_name='Card Created')),
                ('user', models.ForeignKey(blank=True, help_text='The user for whom account belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='virtual_cards_user_profile', to=settings.AUTH_USER_MODEL, verbose_name='User Profile')),
            ],
            options={
                'verbose_name': ' Create Virtual Cards ',
                'verbose_name_plural': ' Create Virtual Cards ',
                'ordering': ('-created_date',),
            },
        ),
    ]
