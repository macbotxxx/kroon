# Generated by Django 3.2.9 on 2022-10-04 10:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('virtual_cards', '0004_alter_create_virtual_cards_billing_state'),
    ]

    operations = [
        migrations.CreateModel(
            name='Virtual_Cards_Details',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of an object.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the record was created.', max_length=20, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Modified date when the record was created.', max_length=20, verbose_name='Modified Date')),
                ('card_id', models.CharField(blank=True, help_text=' This is the card identification number which is unique for each user virtual card  ', max_length=50, null=True, verbose_name='Card ID')),
                ('account_id', models.CharField(blank=True, help_text=' This is the account identification number which is unique for each user virtual card  ', max_length=50, null=True, verbose_name='Account ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, help_text=' The total amount associated with the virtual card ', max_digits=300, null=True, verbose_name='Amount')),
                ('currency', models.CharField(blank=True, help_text=' This is the currency the card would be denominated in. Expected values include NGN and USD. ', max_length=10, null=True, verbose_name='Currency')),
                ('card_hash', models.CharField(blank=True, help_text=' Cryptographic hash functions seem to be an ideal method for protecting and securely storing credit card numbers in ecommerce and payment applications.  ', max_length=50, null=True, verbose_name='Card Hash')),
                ('card_pan', models.CharField(blank=True, help_text=' A payment card number, primary account number (PAN), or simply a card number, is the card identifier found on payment cards, such as credit cards and debit  ', max_length=50, null=True, verbose_name='Card Pan')),
                ('masked_pan', models.CharField(blank=True, help_text=' Card Pan masking hides a portion of the long card number, or PAN, on a credit or debit card, protecting the card account numbers when displayed or printed  ', max_length=50, null=True, verbose_name='Masked Card Pan')),
                ('address', models.CharField(blank=True, help_text=' This is the registered address for the card. e.g. Your house address where you would receive your card statements. ', max_length=250, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, help_text=' This is the city registered with the card, it makes up part of the address the customer used for their card. ', max_length=250, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, help_text=' This is the State/County/Province/Region registered with the card. It is a two letter word representing the state in the billing country e.g CA, NY  ', max_length=50, null=True, verbose_name='State')),
                ('postal_code', models.CharField(blank=True, help_text=' This is the zip code or postal card registered with the card.  ', max_length=7, null=True, verbose_name='Postal Code')),
                ('cvv', models.CharField(blank=True, help_text=' A card security code is a series of numbers that, in addition to the bank card number, is printed on a card. The CSC is used as a security feature for card not present transactions, where a personal identification number cannot be manually entered by the cardholder.  ', max_length=3, null=True, verbose_name='Cvv')),
                ('expiration', models.CharField(blank=True, help_text=" Expiration dates appear on the front or back of a credit card in a two-digit month/year format. Credit cards expire at the end of the month written on the card. For example, a credit card's expiration date may read as 11/24, which means the card is active through the last day of November 2024  ", max_length=20, null=True, verbose_name='expiration')),
                ('send_to', models.CharField(blank=True, help_text=' this indicates who the card will be shipped to from the company card issuer ', max_length=100, null=True, verbose_name='Send To')),
                ('bin_check_name', models.CharField(blank=True, help_text=' BIN Checker is designed to instantly verify, validate & check the BIN (Bank Identification Number) on the updated free BIN database. The tool fetches the card issuer details and facilitates in identifying the issuing bank by the card. It tells which bank and its branch issued that card. ', max_length=200, null=True, verbose_name='Bin Check Name')),
                ('card_type', models.CharField(blank=True, help_text=' Card Type means any card we issue under the Visa, MasterCard, or any other card acceptance scheme ', max_length=100, null=True, verbose_name='Card Type')),
                ('name_on_card', models.CharField(blank=True, help_text=' Refers to the person who owns a credit or debit card. The cardholder name is the name of the owner, printed on the front of the card. ', max_length=200, null=True, verbose_name='Name On Card')),
                ('is_active', models.BooleanField(blank=True, default=False, help_text=' This indicates if the card is still active or not ', null=True, verbose_name='Card Active')),
                ('user', models.ForeignKey(blank=True, help_text='The user for whom account belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_virtual_card', to=settings.AUTH_USER_MODEL, verbose_name='User Profile')),
            ],
            options={
                'verbose_name': ' User Virtual Cards Details ',
                'verbose_name_plural': ' User Virtual Cards Details ',
                'ordering': ('-created_date',),
            },
        ),
    ]
