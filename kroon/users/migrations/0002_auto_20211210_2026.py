# Generated by Django 3.2.9 on 2021-12-10 20:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import kroon.users.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'All Registered Investors', 'verbose_name_plural': 'All Registered Investors'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', kroon.users.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='username',
        ),
        migrations.AddField(
            model_name='user',
            name='available_balance',
            field=models.FloatField(blank=True, default=0, help_text='The investors available balance for the account', null=True, verbose_name='Available Balance'),
        ),
        migrations.AddField(
            model_name='user',
            name='crypto_available_balance',
            field=models.FloatField(blank=True, default=0, help_text='The investors available balance in crypto currency , converting the available balance to crypto currency', null=True, verbose_name='Crypto Balance'),
        ),
        migrations.AddField(
            model_name='user',
            name='crypto_referral_bonus',
            field=models.FloatField(blank=True, default=0, help_text='The investors withdrable balance in crypto converting the referral balance to crypto currency', null=True, verbose_name='Crypto Referral Balance'),
        ),
        migrations.AddField(
            model_name='user',
            name='crypto_withdrawal_balance',
            field=models.FloatField(blank=True, default=0, help_text='The investors withdrable balance in crypto converting the withdrawable balance to crypto currency', null=True, verbose_name='Crypto Withdrawal Balance'),
        ),
        migrations.AddField(
            model_name='user',
            name='date_of_birth',
            field=models.DateField(blank=True, help_text='The date of birth of the customer.', null=True, verbose_name='Date of birth'),
        ),
        migrations.AddField(
            model_name='user',
            name='default_currency_id',
            field=models.CharField(blank=True, default='USD', help_text='The default currency of the investor. Currency will be sent against investors country of residence.', max_length=3, null=True, verbose_name='Default Currency ID'),
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(help_text='The first nammes of the investor.', max_length=50, null=True, verbose_name='First names'),
        ),
        migrations.AddField(
            model_name='user',
            name='kyc_complete',
            field=models.BooleanField(default=False, help_text='Flag to determine if a cutomer have completed KYC verification', verbose_name='KYC complete'),
        ),
        migrations.AddField(
            model_name='user',
            name='kyc_complete_date',
            field=models.DateTimeField(blank=True, help_text='Timestamp when customer completed KYC verifiction process.', null=True, verbose_name='KYC complete date'),
        ),
        migrations.AddField(
            model_name='user',
            name='kyc_status',
            field=models.CharField(blank=True, choices=[('unverified', 'Unverified'), ('pending', 'Pending'), ('verified', 'Verified'), ('action_required', 'Action_required'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected/Refused')], default='Unverified', help_text='The .', max_length=15, null=True, verbose_name='KYC status'),
        ),
        migrations.AddField(
            model_name='user',
            name='kyc_submitted',
            field=models.BooleanField(blank=True, help_text='Flag to determine if customer has submitted a KYC verification.', null=True, verbose_name='KYC submitted'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(help_text='The last nammes of the investor.', max_length=50, null=True, verbose_name='Last names'),
        ),
        migrations.AddField(
            model_name='user',
            name='referral_bonus',
            field=models.FloatField(blank=True, default=0, help_text='The investors referral bonus balance for the account', null=True, verbose_name='Referral Bonus'),
        ),
        migrations.AddField(
            model_name='user',
            name='withdrawal_balance',
            field=models.FloatField(blank=True, default=0, help_text='The investors withdrable balance for the account', null=True, verbose_name='Withdrawal Balance'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(help_text='The email address of the investor.', max_length=150, null=True, unique=True, verbose_name='Email Address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of the investor.', primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of an object.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the record was created.', max_length=20, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Modified date when the record was created.', max_length=20, verbose_name='Modified Date')),
                ('hostname', models.CharField(blank=True, help_text='The Host Name of the logged in user system', max_length=355, null=True, verbose_name='Host Name')),
                ('ip_address', models.GenericIPAddressField(blank=True, editable=False, help_text=' The system IP address to current login user', null=True, verbose_name='System IP Address')),
                ('user', models.ForeignKey(help_text='The user for whom account belongs to', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Profile')),
            ],
            options={
                'verbose_name': 'All Users Activity',
                'verbose_name_plural': 'All Users Activity',
                'ordering': ('-created_date',),
            },
        ),
    ]
