# Generated by Django 3.2.9 on 2021-12-20 22:55

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('kroon_token', '0002_alter_tokenrate_currency'),
    ]

    operations = [
        migrations.CreateModel(
            name='PurchaseTokenFees',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of an object.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the record was created.', max_length=20, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Modified date when the record was created.', max_length=20, verbose_name='Modified Date')),
                ('operator', models.CharField(choices=[('paystack cards', 'Paystack Card'), ('agent', 'Agent')], help_text='this section hold the operator which the current fees should be applied to.', max_length=300, null=True, verbose_name='Operators')),
                ('application_fee', models.PositiveBigIntegerField(help_text='identify the application fees for the current rate.', null=True, verbose_name='Application Fees')),
                ('vat_fee', models.PositiveBigIntegerField(help_text='the vat fee for any transaction which will be calculated with the kroon token amount and application fees.', null=True, verbose_name='Vat Fees')),
                ('agent_fee', models.PositiveBigIntegerField(blank=True, help_text='the agent fee should take place when ever an agent is meant to handle kroon token request. which will be added along side with vat fees  and application fees.', null=True, verbose_name='Agent Fees')),
            ],
            options={
                'verbose_name': 'Purchase Kroon Token Fee',
                'verbose_name_plural': 'Purchase Kroon Token Fee',
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='WithDrawTokenFees',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The unique identifier of an object.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Timestamp when the record was created.', max_length=20, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Modified date when the record was created.', max_length=20, verbose_name='Modified Date')),
                ('operator', models.CharField(choices=[('paystack bank accounts', 'Paystack Bank Accounts'), ('agent cashout', 'Agent Cashout')], help_text='this section hold the withdrawal operator which the current fees should be applied to.', max_length=300, null=True, verbose_name='Withdraw Operators')),
                ('application_fee', models.PositiveBigIntegerField(help_text='identify the application fees for the current rate.', null=True, verbose_name='Application Fees')),
                ('vat_fee', models.PositiveBigIntegerField(help_text='the vat fee for any transaction which will be calculated with the kroon token amount and application fees.', null=True, verbose_name='Vat Fees')),
                ('agent_fee', models.PositiveBigIntegerField(blank=True, help_text='the agent fee should take place when ever an agent is meant to handle kroon token request. which will be added along side with vat fees  and application fees.', null=True, verbose_name='Agent Fees')),
            ],
            options={
                'verbose_name': 'Withdraw Kroon Token Fee',
                'verbose_name_plural': 'Withdraw Kroon Token Fee',
                'ordering': ('-created_date',),
            },
        ),
    ]
